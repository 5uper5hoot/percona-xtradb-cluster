#!/bin/bash
#
# Scripts to run by MySQL systemd service
#
# Needed argument: pre | post
#
# pre mode  :  try to perform sanity check for configuration, log, data
# post mode :  ping server until answer is received

# Runs an arbitrary init sql file supplied in $1. Does not require login access
run_init_sql() {
    tmpdir=$(mktemp -d)
    chown mysql:mysql "$tmpdir"
    /usr/sbin/mysqld --user=mysql --init-file="$1" --socket="$tmpdir/mysqld.sock" --pid-file="$tmpdir/mysqld.pid" > /dev/null 2>&1
    result=$?
    rm -rf "$tmpdir"
    return $result
}

get_recover_pos () {
    wsrep_start_position_opt=""

    LOG=$(mktemp --tmpdir=/var/lib/mysql-files/ --suffix=.log)
    chown mysql.mysql $LOG
    /usr/sbin/mysqld --user=mysql --wsrep_recover --log-error=$LOG

    local rp="$(grep 'WSREP: Recovered position:' $LOG | tail -n 1)"
    if [ -z "$rp" ]; then
         local skipped="$(grep WSREP $LOG | grep 'skipping position recovery')"
         if [ -z "$skipped" ]; then
             systemd-cat -t mysql -p err echo "WSREP: Failed to recover position:"
             exit 1
         else
             systemd-cat -t mysql -p info echo "WSREP: Position recovery skipped"
         fi
    else
         local start_pos="$(echo $rp | sed 's/.*WSREP\:\ Recovered\ position://' \
              | sed 's/^[ \t]*//')"
         systemd-cat -t mysql -p info echo "WSREP: Recovered position $start_pos"
         wsrep_start_position_opt="--wsrep_start_position=$start_pos"
    fi
    rm -f $LOG

    if [ -n "$start_pos" ]; then
        systemctl set-environment MYSQLD_RECOVER_START="$wsrep_start_position_opt"
    fi
}

sanity () {
    if [ ! -r /etc/mysql/my.cnf ]; then
        systemd-cat -t mysql -p err \
            echo "MySQL configuration not found at /etc/mysql/my.cnf. Please create one."
        exit 1
    fi

    if [ ! -d /var/lib/mysql ] && [ ! -L /var/lib/mysql ]; then
        systemd-cat -t mysql -p err \
            echo "MySQL data dir not found at /var/lib/mysql. Please create one."
        exit 1
    fi

    if [ ! -d /var/lib/mysql/mysql ] && [ ! -L /var/lib/mysql/mysql ]; then
        SQL=$(mktemp --tmpdir=/var/lib/mysql-files/)
        touch ${SQL}
        chmod 600 ${SQL}
        chown mysql:mysql ${SQL}

        cat << EOF > ${SQL}
USE mysql;
INSTALL PLUGIN auth_socket SONAME 'auth_socket.so';
ALTER USER 'root'@'localhost' IDENTIFIED WITH 'auth_socket';
SHUTDOWN;
EOF
        /usr/sbin/mysqld --initialize-insecure --user=mysql > /dev/null
        run_init_sql "$SQL"
        rm -f "$SQL"
    else
        get_recover_pos
    fi
}

clear_recover_pos () {
    systemctl unset-environment MYSQLD_RECOVER_START
}

pinger () {
    server_up=false
    for i in $(seq 1 30); do
        sleep 1
        if mysqladmin ping >/dev/null 2>&1; then
            server_up=true
            break
        fi
    done
    clear_recover_pos
    if [ ! $server_up ]; then
        systemd-cat -t mysql -p err \
            echo "MySQL server not started"
        exit 1
    fi
}

case $1 in
  "pre")  sanity ;;
  "post") pinger ;;
esac
