--- sql/sql_parse.cc
+++ sql/sql_parse.cc
@@ -301,13 +301,43 @@ uint server_command_flags[COM_END+1];
 void init_update_queries(void)
 {
   /* Initialize the server command flags array. */
+#ifdef WITH_WSREP
   memset(server_command_flags, 0, sizeof(server_command_flags));
+  server_command_flags[COM_STATISTICS]=   CF_SKIP_QUESTIONS |
+    CF_SKIP_WSREP_CHECK;
+  server_command_flags[COM_PING]=         CF_SKIP_QUESTIONS |
+    CF_SKIP_WSREP_CHECK;
+  server_command_flags[COM_STMT_PREPARE]= CF_SKIP_QUESTIONS |
+    CF_SKIP_WSREP_CHECK;
+  server_command_flags[COM_STMT_EXECUTE]= CF_SKIP_WSREP_CHECK;
+  server_command_flags[COM_STMT_FETCH]=   CF_SKIP_WSREP_CHECK;
+  server_command_flags[COM_STMT_CLOSE]=   CF_SKIP_QUESTIONS |
+    CF_SKIP_WSREP_CHECK;
+  server_command_flags[COM_STMT_RESET]=   CF_SKIP_QUESTIONS |
+    CF_SKIP_WSREP_CHECK;
+  server_command_flags[COM_STMT_SEND_LONG_DATA] = CF_SKIP_WSREP_CHECK;
+
+  server_command_flags[COM_QUIT]= CF_SKIP_WSREP_CHECK;
+  server_command_flags[COM_PROCESS_INFO]= CF_SKIP_WSREP_CHECK;
+  server_command_flags[COM_PROCESS_KILL]= CF_SKIP_WSREP_CHECK;
+  server_command_flags[COM_SHUTDOWN]= CF_SKIP_WSREP_CHECK;
+  server_command_flags[COM_SLEEP]= CF_SKIP_WSREP_CHECK;
+  server_command_flags[COM_TIME]= CF_SKIP_WSREP_CHECK;
+  server_command_flags[COM_END]= CF_SKIP_WSREP_CHECK;
 
+  /*
+    COM_QUERY and COM_SET_OPTION are allowed to pass the early COM_xxx filter,
+    they're checked later in mysql_execute_command().
+  */
+  server_command_flags[COM_QUERY]= CF_SKIP_WSREP_CHECK;
+  server_command_flags[COM_SET_OPTION]= CF_SKIP_WSREP_CHECK;
+#else
   server_command_flags[COM_STATISTICS]= CF_SKIP_QUESTIONS;
   server_command_flags[COM_PING]=       CF_SKIP_QUESTIONS;
   server_command_flags[COM_STMT_PREPARE]= CF_SKIP_QUESTIONS;
   server_command_flags[COM_STMT_CLOSE]=   CF_SKIP_QUESTIONS;
   server_command_flags[COM_STMT_RESET]=   CF_SKIP_QUESTIONS;
+#endif /* WITH_WSREP */
 
   /* Initialize the sql command flags array. */
   memset(sql_command_flags, 0, sizeof(sql_command_flags));
@@ -1109,21 +1158,10 @@ bool do_command(THD *thd)
      * allow queries "SET" and "SHOW", they are trapped later in execute_command
      */
     if (thd->variables.wsrep_on && !thd->wsrep_applier && !wsrep_ready &&
-        command != COM_QUERY        &&
-        command != COM_PING         &&
-        command != COM_QUIT         &&
-        command != COM_PROCESS_INFO &&
-        command != COM_PROCESS_KILL &&
-        command != COM_SET_OPTION   &&
-        command != COM_SHUTDOWN     &&
-        command != COM_SLEEP        &&
-        command != COM_STATISTICS   &&
-        command != COM_TIME         &&
-        command != COM_END          &&
-        command != COM_STMT_CLOSE
+        (server_command_flags[command] & CF_SKIP_WSREP_CHECK) == 0
     ) {
-      my_error(ER_UNKNOWN_COM_ERROR, MYF(0),
-	       "WSREP has not yet prepared node for application use");
+      my_message(ER_UNKNOWN_COM_ERROR,
+	       "WSREP has not yet prepared node for application use", MYF(0));
       thd->protocol->end_statement();
 
       /* Performance Schema Interface instrumentation end */
