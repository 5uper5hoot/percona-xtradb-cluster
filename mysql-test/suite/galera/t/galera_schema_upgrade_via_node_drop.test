#
# This test checks for the ability to peform schema upgrades by temporarily dropping a node from the cluster
# http://www.slideshare.net/Severalnines/schema-upgrades-codershippresodec2013 slide 34
#

--source include/galera_cluster.inc
--source include/have_innodb.inc

--connection node_1
CREATE TABLE ten (f1 INTEGER);
INSERT INTO ten VALUES (0),(1),(2),(3),(4),(5),(6),(7),(8),(9);

CREATE TABLE t1 (f1 INTEGER) Engine=InnoDB;

# Insert some values before the ALTER
INSERT INTO t1 (f1) SELECT 000000 + (10000 * a1.f1) + (1000 * a2.f1) + (100 * a3.f1) + (10 * a4.f1) + a5.f1 FROM ten AS a1, ten AS a2, ten AS a3, ten AS a4, ten AS a5;

# Insert more values while the ALTER is running
--send INSERT INTO t1 (f1) SELECT 100000 + (10000 * a1.f1) + (1000 * a2.f1) + (100 * a3.f1) + (10 * a4.f1) + a5.f1 FROM ten AS a1, ten AS a2, ten AS a3, ten AS a4, ten AS a5;

--connection node_2
--let $wsrep_cluster_address_orig = `SELECT @@wsrep_cluster_address`
SET GLOBAL wsrep_cluster_address = "gcomm://";
SET GLOBAL wsrep_on = FALSE;
ALTER TABLE t1 ADD PRIMARY KEY (f1);
SET GLOBAL wsrep_on = TRUE;

# We do not log this statement as the wsrep_cluster_address can contain variable TCP port numbers
--disable_query_log
--eval SET GLOBAL wsrep_cluster_address = "$wsrep_cluster_address_orig";
--enable_query_log
--sleep 5

# Insert some values after the ALTER
INSERT INTO t1 (f1) SELECT 200000 + (10000 * a1.f1) + (1000 * a2.f1) + (100 * a3.f1) + (10 * a4.f1) + a5.f1 FROM ten AS a1, ten AS a2, ten AS a3, ten AS a4, ten AS a5;

--connection node_1
--reap
SELECT COUNT(*) = 300000 FROM t1;
SELECT MAX(f1) =  299999 FROM t1;

--connection node_2
SELECT COUNT(*) = 300000 FROM t1;
SELECT MAX(f1) =  299999 FROM t1;

DROP TABLE t1;
DROP TABLE ten;
