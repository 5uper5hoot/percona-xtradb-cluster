--source include/galera_cluster.inc
--source include/have_innodb.inc

#
# Test the various forms of CREATE TABLE LIKE ... , since Galera has special handling
# for them, especially when one of the tables is a temporary one.
#

CREATE SCHEMA schema1;
CREATE SCHEMA schema2;

USE schema1;
CREATE TABLE real_table (f1 INTEGER) ENGINE=InnoDB;
CREATE TEMPORARY TABLE temp_table (f1 INTEGER) ENGINE=InnoDB;
SET SESSION wsrep_replicate_myisam=ON;
CREATE TABLE myisam_table (f1 INTEGER) ENGINE=MyISAM;

USE schema2;
CREATE TABLE real_table1 LIKE schema1.real_table;
CREATE TABLE real_table2 LIKE schema1.temp_table;
CREATE TABLE real_table3 LIKE schema1.myisam_table;

CREATE TEMPORARY TABLE temp_table1 LIKE schema1.real_table;
CREATE TEMPORARY TABLE temp_table2 LIKE schema1.temp_table;
CREATE TEMPORARY TABLE temp_table3 LIKE schema1.myisam_table;

--connection node_2
# Only the non-temporary tables are replicated, regardless of the type of table they are based on

SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'real_table' AND TABLE_SCHEMA = 'schema1';
SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'myisam_table' AND TABLE_SCHEMA = 'schema1';
SELECT COUNT(*) = 0 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'temp_table' AND TABLE_SCHEMA = 'schema1';

SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'real_table1' AND TABLE_SCHEMA = 'schema2';
SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'real_table2' AND TABLE_SCHEMA = 'schema2';
SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'real_table3' AND TABLE_SCHEMA = 'schema2';

SELECT COUNT(*) = 0 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'temp_table1' AND TABLE_SCHEMA = 'schema2';
SELECT COUNT(*) = 0 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'temp_table2' AND TABLE_SCHEMA = 'schema2';
SELECT COUNT(*) = 0 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'temp_table3' AND TABLE_SCHEMA = 'schema2';

--connection node_1
DROP TABLE schema1.real_table;
DROP TABLE schema1.myisam_table;

DROP TABLE schema2.real_table1;
DROP TABLE schema2.real_table2;
DROP TABLE schema2.real_table3;

DROP SCHEMA schema1;
DROP SCHEMA schema2;

#
# Scenario that involves mix of temporary and non-temporary as part of single
# drop statement.
#

--connection node_1
--echo #node-1
use test;
create table t1 (c1 int) engine=innodb;
create table t2 (c1 int) engine=innodb;
create temporary table t1 (c1 int) engine=innodb;
insert into t1 values (1);
insert into t2 values (2);

--connection node_2
--echo #node-2
use test;
select * from t1;
select * from t2;

--connection node_1
--echo #node-1
# this statement create a mix of temporary and non-temporary object.
# temporary objects are not replicated but statement is replicated
# completely w/o stripping off temporary objects and so we create
# a dummy temporary object for statement to pass on slave.
drop table t2, t1;
insert into t1 values (11);

--connection node_2
--echo #node-2
select * from t1;
drop table t1;
