--source include/not_embedded.inc

let $MYSQLD_DATADIR= `select @@datadir`;
let MYSQLD_DATADIR= $MYSQLD_DATADIR;

--source include/audit_log_events.inc

--move_file $MYSQLD_DATADIR/test_audit.log $MYSQLD_DATADIR/test_audit_old.log
set global audit_log_flush= ON;
perl;
  eval "use XML::Parser; 1" or exit 0;
  $p = new XML::Parser;
  $p->parsefile($ENV{'MYSQLD_DATADIR'} . '/test_audit_old.log');
EOF
--remove_file $MYSQLD_DATADIR/test_audit.log

--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--shutdown_server
--source include/wait_until_disconnected.inc
--enable_reconnect
--exec echo "restart: --audit_log_policy=LOGINS --audit-log-format=NEW --audit_log_strategy=SEMISYNCHRONOUS" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--source include/wait_until_connected_again.inc

--source include/audit_log_events.inc

--move_file $MYSQLD_DATADIR/test_audit.log $MYSQLD_DATADIR/test_audit_new.log
set global audit_log_flush= ON;
perl;
  eval "use XML::Parser; 1" or exit 0;
  $p = new XML::Parser;
  $p->parsefile($ENV{'MYSQLD_DATADIR'} . '/test_audit_new.log');
EOF
--remove_file $MYSQLD_DATADIR/test_audit.log

--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--shutdown_server
--source include/wait_until_disconnected.inc
--enable_reconnect
--exec echo "restart: --audit-log-format=JSON --audit_log_strategy=SEMISYNCHRONOUS" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--source include/wait_until_connected_again.inc

--source include/audit_log_events.inc

--move_file $MYSQLD_DATADIR/test_audit.log $MYSQLD_DATADIR/test_audit_json.log
set global audit_log_flush= ON;
perl;
  eval "use JSON qw(decode_json); 1" or exit 0;
  open my $file, $ENV{'MYSQLD_DATADIR'} . '/test_audit_json.log' or die "Could not open log: $!";
  while (my $line = <$file>) {
      decode_json($line);
  }
  close $file;
EOF
--remove_file $MYSQLD_DATADIR/test_audit.log

--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--shutdown_server
--source include/wait_until_disconnected.inc
--enable_reconnect
--exec echo "restart: --audit-log-format=CSV --audit_log_strategy=SEMISYNCHRONOUS" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--source include/wait_until_connected_again.inc

--source include/audit_log_events.inc

--move_file $MYSQLD_DATADIR/test_audit.log $MYSQLD_DATADIR/test_audit_csv.log
set global audit_log_flush= ON;
perl;
  eval "use Text::CSV; 1" or exit 0;
  my $p = Text::CSV->new({ binary => 1, auto_diag => 1, sep_char => ',' });
  open my $file, $ENV{'MYSQLD_DATADIR'} . '/test_audit_csv.log' or die "Could not open log: $!";
  while ($p->getline($file)) {};
  if (not $p->eof) {
    die "CSV parse error " . $p->error_diag();
  }
  close $file;
EOF
--remove_file $MYSQLD_DATADIR/test_audit.log
